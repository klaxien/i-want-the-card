name: Build Python Application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, macos-latest ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          # Using a stable, recent version is often best for CI
          # If you must use 3.13, you can specify '3.13'
          python-version: '3.12'

      - name: Install dependencies from frozen requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build with PyInstaller on Windows
        if: runner.os == 'Windows'
        run: |
          pyinstaller run.py --name "NiTanPreapproval" --onefile --windowed `
          --icon=resources\icon-windows.ico `
          --add-data "config.yaml;." `
          --add-data "prompt_template.md;."

      - name: Build with PyInstaller on macOS (with UPX)
        if: runner.os == 'macOS'
        run: |
          pyinstaller --name "NiTanPreapproval" \
            --windowed \
            --icon resources/icon-mac.icns \
            --add-data "config.yaml:." \
            --add-data "prompt_template.md:." \
            run.py

      - name: Prepare artifact directory
        # Use bash shell for cross-platform compatibility with if statements
        shell: bash
        run: |
          # --- DEBUGGING STEP ---
          # First, let's see what PyInstaller actually created in the 'dist' folder.
          echo "Listing contents of dist directory before processing:"
          ls -R dist
          
          # 1. Create a clean, final directory for the artifact
          rm -rf NiTanPreapproval
          mkdir NiTanPreapproval
          
          # 2. Move ONLY the desired artifact based on the operating system
          if [[ "${{ runner.os }}" == "macOS" ]]; then
            echo "Processing macOS build..."
            # On macOS, move the .app bundle, which is the desired application
            mv dist/NiTanPreapproval.app NiTanPreapproval/
          elif [[ "${{ runner.os }}" == "Windows" ]]; then
            echo "Processing Windows build..."
            # On Windows, move the .exe file
            mv dist/NiTanPreapproval.exe NiTanPreapproval/
          fi
          
          # 3. Copy the configuration file into the final directory
          cp config.yaml NiTanPreapproval/
          
          # 4. (Optional) Print the final contents for debugging
          echo "Final contents of the artifact directory:"
          ls -la NiTanPreapproval/

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          # 上传的 zip 文件名
          name: NiTanPreapproval-${{ runner.os }}
          # 需要打包上传的文件夹路径
          path: NiTanPreapproval/